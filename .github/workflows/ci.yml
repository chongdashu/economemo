name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: # Allows manual triggering

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgrespassword
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install python-dotenv
        pip install -r backend/requirements.txt

    - name: Setup Database
      run: |
        sudo apt-get install -y postgresql-client
        PGPASSWORD=postgrespassword psql -h localhost -U postgres -c "CREATE USER testuser WITH PASSWORD 'testpassword';"
        PGPASSWORD=postgrespassword psql -h localhost -U postgres -c "ALTER USER testuser WITH SUPERUSER;"
        PGPASSWORD=postgrespassword psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS testdb;"
        PGPASSWORD=postgrespassword psql -h localhost -U postgres -c "CREATE DATABASE testdb OWNER testuser;"
      env:
        PGPASSWORD: postgrespassword

    - name: Run tests
      run: |
        pytest --maxfail=1 --disable-warnings -v
      env:
        POSTGRES_USER: testuser
        POSTGRES_PASSWORD: testpassword
        POSTGRES_DB: testdb
        POSTGRES_HOST: localhost
        DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
